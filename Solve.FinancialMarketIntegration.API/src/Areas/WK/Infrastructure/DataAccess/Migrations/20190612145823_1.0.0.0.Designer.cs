// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solve.FinancialMarketIntegration.API.Areas.WK.Infrastructure.DataAccess;

namespace Solve.FinancialMarketIntegration.API.Areas.WK.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(WorkflowDataContext))]
    [Migration("20190612145823_1.0.0.0")]
    partial class _1000
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.Workflow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ChangeDate");

                    b.Property<string>("ChangeUser");

                    b.Property<DateTimeOffset>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<int?>("CurrentStepId");

                    b.Property<bool>("IsFinished");

                    b.Property<int>("WorkflowTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStepId");

                    b.HasIndex("WorkflowTypeId");

                    b.ToTable("Workflow","Workflow");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ChangeDate");

                    b.Property<string>("ChangeUser");

                    b.Property<DateTimeOffset>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Approval","Workflow");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovalId");

                    b.Property<DateTimeOffset?>("ChangeDate");

                    b.Property<string>("ChangeUser");

                    b.Property<DateTimeOffset>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<int>("RoleId");

                    b.Property<int?>("WorkflowApprovalStepId");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalId");

                    b.HasIndex("WorkflowApprovalStepId");

                    b.ToTable("ApprovalRole","Workflow");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ChangeDate");

                    b.Property<string>("ChangeUser");

                    b.Property<DateTimeOffset>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsFirstStep");

                    b.Property<int?>("NextStepApprovedId");

                    b.Property<int?>("NextStepRejectedId");

                    b.Property<short?>("WorkflowStatusId");

                    b.Property<int?>("WorkflowTypeId");

                    b.HasKey("Id");

                    b.HasIndex("NextStepApprovedId");

                    b.HasIndex("NextStepRejectedId");

                    b.HasIndex("WorkflowStatusId");

                    b.HasIndex("WorkflowTypeId");

                    b.ToTable("ApprovalStep","Workflow");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalStepResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovalId");

                    b.Property<DateTimeOffset?>("ChangeDate");

                    b.Property<string>("ChangeUser");

                    b.Property<string>("Comments");

                    b.Property<DateTimeOffset>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<bool?>("IsApproved");

                    b.Property<int>("RoleId");

                    b.Property<int?>("WorkflowStepResultId");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalId");

                    b.HasIndex("WorkflowStepResultId");

                    b.ToTable("ApprovalStepResult","Workflow");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStatus", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ChangeDate");

                    b.Property<string>("ChangeUser");

                    b.Property<DateTimeOffset>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Status","Workflow");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStepResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ChangeDate");

                    b.Property<string>("ChangeUser");

                    b.Property<DateTimeOffset>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<bool>("IsFirstStep");

                    b.Property<int?>("NextStepApprovedId");

                    b.Property<int?>("NextStepRejectedId");

                    b.Property<int>("StepOriginId");

                    b.Property<int?>("WorkflowId");

                    b.Property<short?>("WorkflowStatusId");

                    b.HasKey("Id");

                    b.HasIndex("NextStepApprovedId");

                    b.HasIndex("NextStepRejectedId");

                    b.HasIndex("StepOriginId");

                    b.HasIndex("WorkflowId");

                    b.HasIndex("WorkflowStatusId");

                    b.ToTable("StepResult","Workflow");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ChangeDate");

                    b.Property<string>("ChangeUser");

                    b.Property<DateTimeOffset>("CreationDate");

                    b.Property<string>("CreationUser");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Type","Workflow");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.Workflow", b =>
                {
                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStepResult", "CurrentStep")
                        .WithMany()
                        .HasForeignKey("CurrentStepId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowType")
                        .WithMany("Workflows")
                        .HasForeignKey("WorkflowTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalRole", b =>
                {
                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApproval", "Approval")
                        .WithMany()
                        .HasForeignKey("ApprovalId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalStep")
                        .WithMany("Approvals")
                        .HasForeignKey("WorkflowApprovalStepId");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalStep", b =>
                {
                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalStep", "NextStepApproved")
                        .WithMany()
                        .HasForeignKey("NextStepApprovedId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalStep", "NextStepRejected")
                        .WithMany()
                        .HasForeignKey("NextStepRejectedId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStatus", "WorkflowStatus")
                        .WithMany()
                        .HasForeignKey("WorkflowStatusId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowType")
                        .WithMany("Steps")
                        .HasForeignKey("WorkflowTypeId");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalStepResult", b =>
                {
                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApproval", "Approval")
                        .WithMany()
                        .HasForeignKey("ApprovalId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStepResult")
                        .WithMany("Approvals")
                        .HasForeignKey("WorkflowStepResultId");
                });

            modelBuilder.Entity("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStepResult", b =>
                {
                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStepResult", "NextStepApproved")
                        .WithMany()
                        .HasForeignKey("NextStepApprovedId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStepResult", "NextStepRejected")
                        .WithMany()
                        .HasForeignKey("NextStepRejectedId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowApprovalStep", "Origin")
                        .WithMany()
                        .HasForeignKey("StepOriginId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.Workflow")
                        .WithMany("Steps")
                        .HasForeignKey("WorkflowId");

                    b.HasOne("Solve.FinancialMarketIntegration.API.Areas.WK.Entities.WorkflowStatus", "WorkflowStatus")
                        .WithMany()
                        .HasForeignKey("WorkflowStatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
